name: Secrets And Variables

on:
  workflow_dispatch:

env:
    OVERWRITES_ENV: "workflow_level"

jobs:
  job-environment-test:
    runs-on: ubuntu-22.04
    environment: ${{ vars.USE_ENVIRONMENT }}
    steps:
    - name: Build
      id: build-step-id
      run: |
        echo "vars.USE_ENVIRONMENT${{ vars.USE_ENVIRONMENT }}"
        echo "vars.ENVIRONMENT_NAME${{ vars.ENVIRONMENT_NAME }}"
        echo "secrets.DEV_API_KEY${{ secrets.DEV_API_KEY }}"
        echo "secrets.PRODUCTION_API_KEY ${{ secrets.PRODUCTION_API_KEY }}"
        echo "name=Rafael" >> $GITHUB_OUTPUT

    - name: Deploy
      run: |
        echo "steps.build-step-id.outputs.name ${{ steps.build-step-id.outputs.name }}"

    outputs:
        real_name: ${{ steps.build-step-id.outputs.name }}


  build-and-deploy:
    runs-on: ubuntu-22.04

    env:
      DEPLOYMENT_ENV: "production"  # Define a job-level environment variable
      OVERWRITES_ENV: "job_level"

    needs: [job-environment-test]

    steps:
    - name: Build
      run: |
        # Build your application here
        echo "Building the application"
        echo "needs.job-environment-test.outputs.real_name ${{ needs.job-environment-test.outputs.real_name }}"
        echo "secrets.API_KEY ${{ secrets.API_KEY }}"
        echo "env.DEPLOYMENT_ENV ${{ env.DEPLOYMENT_ENV }}"
        echo "SECRET_API_KEY $SECRET_API_KEY"
        echo "CONFIG_VARIABLE $CONFIG_VARIABLE"
        echo "STEPS_USERNAME $STEPS_USERNAME"
        echo "vars.USERNAME ${{ vars.USERNAME }}"
        echo "OVERWRITES_ENV $OVERWRITES_ENV"
        echo "vars.ENVIRONMENT_NAME ${{ vars.ENVIRONMENT_NAME }}"
      env:
        SECRET_API_KEY: ${{ secrets.API_KEY }}  # Access a secret as an environment variable
        STEPS_USERNAME: ${{ vars.USERNAME }}
        CONFIG_VARIABLE: ${{ env.DEPLOYMENT_ENV }}  # Use a step-level environment variable
        OVERWRITES_ENV: "step_level"

    - name: Deploy
      run: |
        # Deploy your application using the secrets and variables
        echo "Global job variable ${{ env.DEPLOYMENT_ENV }}"
        echo "Variable from previous step ${CONFIG_VARIABLE} environment"
        echo "Variable from this step ${CONFIG_VARIABLE2} environment"
        echo "Local step variable ${ANOTHER_VARIABLE}"
        echo "Secret print ${{ secrets.API_KEY }}"
        echo "Step"s secret variable ${SECRET_API_KEY}"
      env:
        SECRET_API_KEY: ${{ secrets.API_KEY }}
        CONFIG_VARIABLE2: ${{ env.DEPLOYMENT_ENV }}  # Use a step-level environment variable
        ANOTHER_VARIABLE: "Some value"  # Define a variable directly in the workflow